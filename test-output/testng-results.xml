<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="6" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-01T17:22:51 CDT" name="Suite" finished-at="2022-10-01T17:23:24 CDT" duration-ms="32645">
    <groups>
      <group name="errorvalidation">
        <method signature="ErrorValidationTest.loginValidation(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" name="loginValidation" class="gbuxssCreation.Tests.ErrorValidationTest"/>
        <method signature="ErrorValidationTest.validatecorrectProdct(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" name="validatecorrectProdct" class="gbuxssCreation.Tests.ErrorValidationTest"/>
      </group> <!-- errorvalidation -->
    </groups>
    <test started-at="2022-10-01T17:22:51 CDT" name="Submit Order Test" finished-at="2022-10-01T17:22:51 CDT" duration-ms="20">
    </test> <!-- Submit Order Test -->
    <test started-at="2022-10-01T17:22:52 CDT" name="Error Validation Test" finished-at="2022-10-01T17:23:24 CDT" duration-ms="32176">
      <class name="gbuxssCreation.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:22:52 CDT" name="lunchApplication" finished-at="2022-10-01T17:22:58 CDT" duration-ms="6545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginValidation(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:22:58 CDT" name="loginValidation" data-provider="loginValidationData" finished-at="2022-10-01T17:23:00 CDT" duration-ms="1157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Nepal@1245, email=jeevandhamala095@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:00 CDT" name="tearDown" finished-at="2022-10-01T17:23:00 CDT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:00 CDT" name="lunchApplication" finished-at="2022-10-01T17:23:04 CDT" duration-ms="4724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginValidation(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:04 CDT" name="loginValidation" data-provider="loginValidationData" finished-at="2022-10-01T17:23:05 CDT" duration-ms="979" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Nepal@12345, email=johnDoe@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<Login Successfully> but was:<Incorrect email or password.>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<Login Successfully> but was:<Incorrect email or password.>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:115)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:125)
at gbuxssCreation.Tests.ErrorValidationTest.loginValidation(ErrorValidationTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:06 CDT" name="tearDown" finished-at="2022-10-01T17:23:06 CDT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:06 CDT" name="lunchApplication" finished-at="2022-10-01T17:23:10 CDT" duration-ms="4585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="validatecorrectProdct(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:10 CDT" name="validatecorrectProdct" data-provider="validatecorrectPrdouctData" finished-at="2022-10-01T17:23:15 CDT" duration-ms="4162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Nepal@12345, email=jeevandhamala095@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatecorrectProdct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:15 CDT" name="tearDown" finished-at="2022-10-01T17:23:15 CDT" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:15 CDT" name="lunchApplication" finished-at="2022-10-01T17:23:19 CDT" duration-ms="4686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="validatecorrectProdct(java.util.HashMap)[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:19 CDT" name="validatecorrectProdct" data-provider="validatecorrectPrdouctData" finished-at="2022-10-01T17:23:24 CDT" duration-ms="4285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Nepal@12345, email=johnDoe@gmail.com, productName=iphone 13 pro}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatecorrectProdct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:gbuxssCreation.Tests.ErrorValidationTest@34f22f9d]" started-at="2022-10-01T17:23:24 CDT" name="tearDown" finished-at="2022-10-01T17:23:24 CDT" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gbuxssCreation.Tests.ErrorValidationTest -->
    </test> <!-- Error Validation Test -->
  </suite> <!-- Suite -->
</testng-results>
